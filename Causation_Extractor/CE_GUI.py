# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CE_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMainWindow

from Causation_Extractor.Analysis_GUI import *
from Causation_Extractor.ceBackend import *
from Causation_Extractor.NewProject import *

import os  # os and json are used for dir json aggregation for now
import sys


class CEGUI(QWidget):

    def __init__(self):
        super().__init__()

    def setupUi(self, CEWindow):
        self.CEWindow = CEWindow
        self.CEWindow.setObjectName("CEWindow")
        self.CEWindow.resize(689, 250)
        self.CEWindow.setMinimumSize(QtCore.QSize(650, 250))
        self.CEWindow.setStyleSheet("background-color: white;")
        self.centralwidget = QtWidgets.QWidget(self.CEWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Browse_Button = QtWidgets.QPushButton(self.centralwidget)
        self.Browse_Button.setGeometry(QtCore.QRect(110, 60, 121, 31))
        font = QtGui.QFont()
        font.setFamily("arial")
        font.setPointSize(15)
        self.Browse_Button.setFont(font)
        self.Browse_Button.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
        self.Browse_Button.setObjectName("Browse_Button")
        self.fileName = QtWidgets.QLineEdit(self.centralwidget)

        self.fileName.setGeometry(QtCore.QRect(230, 60, 351, 31))
        self.fileName.setFont(font)
        self.fileName.setReadOnly(True)
        self.fileName.setStyleSheet("color: black")
        self.fileName.setObjectName("fileName")
        self.fileName.setPlaceholderText("ECELd Project Folder Path")

        self.Analyze_Button = QtWidgets.QPushButton(self.centralwidget)
        self.Analyze_Button.setGeometry(QtCore.QRect(370, 150, 121, 31))
        self.Analyze_Button.setFont(font)
        self.Analyze_Button.setEnabled(False)
        self.Analyze_Button.setStyleSheet(
            "background-color: rgba(18, 51, 62, 80%);; color: #FFFFFF; border-radius: 5px;")
        self.Analyze_Button.setObjectName("Analyze_Button")

        self.SaveProject_Button = QtWidgets.QPushButton(self.centralwidget)
        self.SaveProject_Button.setGeometry(QtCore.QRect(170, 150, 161, 31))
        self.SaveProject_Button.setFont(font)
        self.SaveProject_Button.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
        self.SaveProject_Button.setObjectName("SaveProject_Button")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(90, 20, 301, 31))
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label.setStyleSheet("color: black")
        self.label.setMinimumSize(QtCore.QSize(301, 31))

        self.time_label = QtWidgets.QLabel(self.centralwidget)
        self.time_label.setGeometry(QtCore.QRect(110, 100, 111, 31))
        font.setFamily("arial")
        font.setPointSize(12)
        self.time_label.setFont(font)
        self.time_label.setStyleSheet("color: black;")
        self.time_label.setObjectName("time_label")
        self.CEWindow.setCentralWidget(self.centralwidget)

        self.time_input = QtWidgets.QLineEdit(self.centralwidget)
        self.time_input.setGeometry(QtCore.QRect(240, 100, 341, 31))
        self.time_input.setStyleSheet("color: black;")
        self.time_input.setObjectName("time_input")
        self.CEWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self.CEWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 689, 21))
        self.menubar.setObjectName("menubar")
        self.menubar.setStyleSheet("color: black")
        self.menuNew_Project = QtWidgets.QMenu(self.menubar)
        self.menuNew_Project.setObjectName("menuNew_Project")
        self.menuNew_Project.setStyleSheet("color: black")

        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuNew_Project.setStyleSheet("color: black")

        self.CEWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self.CEWindow)
        self.statusbar.setObjectName("statusbar")
        self.CEWindow.setStatusBar(self.statusbar)

        self.actionSave_Project = QtWidgets.QAction(self.CEWindow)
        self.actionSave_Project.setObjectName("actionSave_Project")
        self.actionSave_Project.triggered.connect(self.save_Project)

        self.actionExit = QtWidgets.QAction(self.CEWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionExit.triggered.connect(self.CEWindow.close)

        self.actionREADME = QtWidgets.QAction(self.CEWindow)
        self.actionREADME.setObjectName("actionREADME")
        self.menuNew_Project.addAction(self.actionSave_Project)
        self.menuNew_Project.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionREADME)
        self.menubar.addAction(self.menuNew_Project.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        ################## TIME FRAME ##############################
        self.time_frame = 5

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self.CEWindow)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self.CEWindow)

        ################# PROJECT NAME #############################
        self.project_name = ""
        self.check_project()

        ########Creating Objects to execute Save Project Window####
        self.Form = QtWidgets.QDialog()
        self.sP = NewProject(self.Form)

        ################# BUTTON ACTIONS ###########################
        self.Browse_Button.clicked.connect(self.browse_Files)
        self.Analyze_Button.clicked.connect(self.show_analyzingWindow)
        self.SaveProject_Button.clicked.connect(self.save_Project)

    ######################  BROWSE BUTTON FUNCTION ###############
    def browse_Files(self):
        try:
            # Gets directory name and sets it to a variable
            name = QFileDialog.getExistingDirectory(self.Browse_Button, 'Choose Src Dir', 'c:\\')
            print("ECELd dirname:", name)
            self.get_ProjectName()
            eceld_path_file = open('Project Data/'+ self.project_name+'/CE/CE_logs/eceld_project_path.txt','w')
            eceld_path_file.write(name)
            directory = os.fsencode(name)
            self.fileName.setText(name)
            backend = ceBackend()
            self.num_lines = backend.output_directory(directory, name)
            
            self.check_project()
        except Exception as e:
            #print(e)
            print("Please select an ECELd data directory")

    def show_analyzingWindow(self):
        self.hide()
        self.Analyzing_Window = QtWidgets.QDialog()
        self.ui = Ui_Analyzing_Window()
        self.ui.setupUi(self.Analyzing_Window,self.CEWindow)
        self.Analyzing_Window.show()
        QtWidgets.qApp.processEvents()
        if self.time_input.text():
            self.time_frame = float(self.time_input.text())
        self.ui.progressBar_update(self.num_lines, self.project_name, self.time_frame)

    ###################### SAVE PROJECT BUTTON #######################################
    def save_Project(self):
        self.Form.show()

    ##############################################################################
    def get_ProjectName(self):
        self.project_name = self.sP.project_sP


    ###################### CHECK THAT A PROJECT HAS BEEN CREATED #############################
    def check_project(self):
        if not self.project_name:
            print("Project not created. Please create one")
        else:
            self.label.setText("ECELd Project Folder:")
            print("Working with project " + self.project_name + "...")
            self.Analyze_Button.setEnabled(True)
            self.Analyze_Button.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
            self.SaveProject_Button.setEnabled(False)
            self.SaveProject_Button.setStyleSheet(
                "background-color: rgba(18, 51, 62, 80%);; color: #FFFFFF; border-radius: 5px;")

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.CEWindow.setWindowTitle(_translate("self.CEWindow", "Agent Build System"))
        self.Browse_Button.setText(_translate("self.CEWindow", "Browse"))
        self.Analyze_Button.setText(_translate("self.CEWindow", "Analyze"))
        self.SaveProject_Button.setText(_translate("self.CEWindow", "Save Project"))
        self.label.setText(_translate("self.CEWindow", "Agent Build System"))
        self.time_label.setText(_translate("self.CEWindow", "Time Frame:"))
        self.menuNew_Project.setTitle(_translate("self.CEWindow", "Project"))
        self.menuHelp.setTitle(_translate("self.CEWindow", "Help"))
        self.actionSave_Project.setText(_translate("self.CEWindow", "Save Project"))
        self.actionExit.setText(_translate("self.CEWindow", "Exit"))
        self.actionREADME.setText(_translate("self.CEWindow", "README"))


