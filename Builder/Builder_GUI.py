# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Builder_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Edit import *
from NewSalientArtifact import *
from BuilderBackEnd import *
import json

class Ui_BuilderWindow(object):

    def __init__(self):
        self.back_end = BuilderBackEnd()
        self.dependency = ""
        self.dependency_list = []

    def setupUi(self, BuilderWindow):
        BuilderWindow.setObjectName("BuilderWindow")
        BuilderWindow.resize(778, 720)
        BuilderWindow.setStyleSheet("background-color: #f4f5f7;")
        self.centralwidget = QtWidgets.QWidget(BuilderWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(778, 579))
        self.centralwidget.setObjectName("centralwidget")
        font = QtGui.QFont()

        #########################Search Label#########################
        self.search_label = QtWidgets.QLabel(self.centralwidget)
        self.search_label.setGeometry(QtCore.QRect(20, 14, 281, 23))
        font.setPointSize(14)
        self.search_label.setFont(font)
        self.search_label.setStyleSheet("color:black;")
        self.search_label.setObjectName("search_label")

        #########################Search Input#########################
        self.search_input = QtWidgets.QLineEdit(self.centralwidget)
        self.search_input.setGeometry(QtCore.QRect(20, 40, 721, 40))
        self.search_input.setObjectName("search_input")
        self.search_input.setStyleSheet("background-color: #FFFFFF; border-radius: 10px; border: 1px solid #D2D6E0; color: black;")
        self.search_input.textChanged.connect(self.displaySearchResults)

        #########################Detail List#########################
        self.Detail_Relaltion_list = QtWidgets.QListWidget(self.centralwidget)
        self.Detail_Relaltion_list.setGeometry(QtCore.QRect(20, 431, 721, 221))
        self.Detail_Relaltion_list.setObjectName("Detail_Relaltion_list")
        self.Detail_Relaltion_list.setStyleSheet("background-color: #FFFFFF; border-radius: 10px; border: 1px solid #D2D6E0; color: black;")
        #########################Dependencies Label#########################
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(460, 92, 281, 23))
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color:black;")
        self.label_3.setObjectName("label_3")

        #####################Dependencies List List Widget######################
        self.Dependency_list = QtWidgets.QListWidget(self.centralwidget)
        self.Dependency_list.setGeometry(QtCore.QRect(460, 120, 281, 293))
        self.Dependency_list.setObjectName("Dependency_list")
        self.Dependency_list.setStyleSheet("background-color: #FFFFFF; border-radius: 10px; border: 1px solid #D2D6E0; color: black;")

        #####################Relationships Label##################################
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 92, 291, 23))
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setStyleSheet("color:black;")
        self.label.setObjectName("label")

        #####################Relationship List List Widget ##########################
        self.Relationship_list = QtWidgets.QListWidget(self.centralwidget)
        self.Relationship_list.setGeometry(QtCore.QRect(20, 120, 291, 293))
        self.Relationship_list.setObjectName("Relationship_list")
        self.Relationship_list.setStyleSheet("background-color: #FFFFFF; border-radius: 10px; border: 1px solid #D2D6E0; color: black;")

        #####################Relationship -> Dependency Button #####################
        self.MoveButton = QtWidgets.QPushButton(self.centralwidget)
        self.MoveButton.setGeometry(QtCore.QRect(340, 180, 100, 75))
        self.MoveButton.setMinimumSize(QtCore.QSize(100, 75))
        font.setPointSize(16)
        self.MoveButton.setFont(font)
        self.MoveButton.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
        self.MoveButton.setObjectName("MoveButton")
        self.MoveButton.clicked.connect(self.passDependency)
        BuilderWindow.setCentralWidget(self.centralwidget)

        #####################Edit Artifact Button #################################
        self.EditButton = QtWidgets.QPushButton(self.centralwidget)
        self.EditButton.setGeometry(QtCore.QRect(340, 261, 100, 75))
        self.EditButton.setMinimumSize(QtCore.QSize(100, 75))
        font.setPointSize(16)
        self.EditButton.setFont(font)
        self.EditButton.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
        self.EditButton.setObjectName("EditButton")
        self.EditButton.clicked.connect(self.open_edit)


        #####################Filter Salient Artifact Button #######################
        # self.FilterButton = QtWidgets.QPushButton(self.centralwidget)
        # self.FilterButton.setGeometry(QtCore.QRect(340, 149, 100, 75))
        # self.FilterButton.setMinimumSize(QtCore.QSize(100, 75))
        # font.setPointSize(16)
        # self.FilterButton.setFont(font)
        # self.FilterButton.setStyleSheet("background-color: #13333F; color: #FFFFFF; border-radius: 5px;")
        # self.FilterButton.setObjectName("FilterButton")
        # self.FilterButton.clicked.connect(self.openFilter)


        ###################### Menu Top Bar #########################################
        self.menubar = QtWidgets.QMenuBar(BuilderWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 778, 21))
        self.menubar.setObjectName("menubar")
        ######################Project Top Bar Dropdown ##############################
        self.menuProject = QtWidgets.QMenu(self.menubar)
        self.menuProject.setObjectName("menuProject")
        BuilderWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(BuilderWindow)
        self.statusbar.setObjectName("statusbar")
        BuilderWindow.setStatusBar(self.statusbar)

        ###################### Save Project Menu Option #############################
        self.actionSave_Project = QtWidgets.QAction(BuilderWindow)
        self.actionSave_Project.setObjectName("actionSave_Project")
        self.menuProject.addAction(self.actionSave_Project)

        ###################### Quit Builder Menu Option #############################
        self.actionQuit = QtWidgets.QAction(BuilderWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuProject.addAction(self.actionQuit)

        self.menubar.addAction(self.menuProject.menuAction())
        self.retranslateUi(BuilderWindow)
        QtCore.QMetaObject.connectSlotsByName(BuilderWindow)

        ############ Call the method to display relations #####################
        self.displayRelations()
        self.disable_edit_button()

    ############ Open Edit Window ####################
    def open_edit(self):
        self.wind = EditForm()
        self.wind.initializeUI()
        # print(self.relations_dictionary[self.Relationship_list.currentItem().text()][self.Relationship_list.currentRow()])
        # print(self.Relationship_list.currentItem().text())
        # print(self.Detail_Relaltion_list.currentRow())
        self.wind.set_relation(self.Detail_Relaltion_list.currentItem())

    def openFilter(self):
        self.wind = NewSalientArtifact()
        self.wind.initializeUI()

    def retranslateUi(self, BuilderWindow):
        _translate = QtCore.QCoreApplication.translate
        BuilderWindow.setWindowTitle(_translate("BuilderWindow", "ABS_Builder"))
        self.label_3.setText(_translate("BuilderWindow", "Dependencies"))
        self.label.setText(_translate("BuilderWindow", "Relationships"))
        self.search_label.setText(_translate("BuilderWindow", "Search"))
        self.EditButton.setText(_translate("BuilderWindow", "Edit"))
        # self.FilterButton.setText(_translate("BuilderWindow", "Filter"))
        self.MoveButton.setText(_translate("BuilderWindow", ">>"))
        self.menuProject.setTitle(_translate("BuilderWindow", "Project"))
        self.actionSave_Project.setText(_translate("BuilderWindow", "Save Project"))
        self.actionQuit.setText(_translate("BuilderWindow", "Quit"))

    def displayRelations(self):
        self.Relationship_list.clear()
        self.relations_dictionary = self.back_end.read_relationships()
        self.search_dictionary = self.relations_dictionary

        for relation_name in self.relations_dictionary.keys():
            self.Relationship_list.addItem(relation_name)

        self.Relationship_list.itemClicked.connect(self.displayContent)

    def displaySearchResults(self, text):
        self.search_dictionary = {}
        for relationship in self.relations_dictionary:
            relationship_added = False
            for relation in self.relations_dictionary.get(relationship):
                if text in str(relation):
                    if relationship_added == False:
                        self.search_dictionary[relationship] = [relation]
                        relationship_added = True
                    self.search_dictionary[relationship].append(relation)

        self.Relationship_list.clear()
        for relation_name in self.search_dictionary.keys():
            self.Relationship_list.addItem(relation_name)

    ##################################### Display the content in the Detail Box ########################################
    def displayContent(self, item):
        """
        first it clears the Detail List
        it stores and formats the Relation chosen (clicked) and changes the name to Dependency #
        Finally, for each relation, it will be added in the Detail list
        """

        self.Detail_Relaltion_list.clear()

        self.dependency = "Dependency " + item.text().split(" ")[1]

        for relations in self.search_dictionary.get(item.text()):
            self.Detail_Relaltion_list.addItem(str(relations))

        self.disable_edit_button()
        self.Detail_Relaltion_list.itemClicked.connect(self.enable_edit_button)

    def passDependency(self):
        """
        If the dependency is not in the list, then added to out dependcy list, and display it.
        """
        if self.dependency not in self.dependency_list:
            self.dependency_list.append(self.dependency)
            self.Dependency_list.addItem(self.dependency)

    def disable_edit_button(self):
        self.EditButton.setEnabled(False)
        self.EditButton.setStyleSheet("background-color: rgba(18, 51, 62, 50%); color: #FFFFFF; border-radius: 5px;")

    def enable_edit_button(self):
        self.EditButton.setEnabled(True)
        self.EditButton.setStyleSheet("background-color: rgba(18, 51, 62, 100%); color: #FFFFFF; border-radius: 5px;")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BuilderWindow = QtWidgets.QMainWindow()
    ui = Ui_BuilderWindow()
    ui.setupUi(BuilderWindow)
    BuilderWindow.show()
    sys.exit(app.exec_())
